name: FrontEnd - Flutter
on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Which env?
        options:
        - qa
        - prod

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: source
        submodules: recursive
        fetch-depth: 0

    - name: Set ENV variables qa
      if: ${{github.event.inputs.env == 'qa'}}
      run: |
        echo "BRANCH_NAME=qa" >> $GITHUB_ENV
        echo "PORT=2999" >> $GITHUB_ENV
        echo "SECRET_ENVIRONMENT=QA" >> $GITHUB_ENV

    - name: Set ENV variables prod
      if: ${{github.event.inputs.env == 'prod'}}
      run: |
        echo "BRANCH_NAME=main" >> $GITHUB_ENV
        echo "PORT=3049" >> $GITHUB_ENV
        echo "SECRET_ENVIRONMENT=PROD" >> $GITHUB_ENV

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Cloning Management App and switching to ${{ env.BRANCH_NAME }}
      working-directory: source
      run: |
        cd ..
        git clone git@github.com:AR-DL/ManagementApp.git
        cd ManagementApp
        git checkout ${{ env.BRANCH_NAME }}

    - name: Create files from secrets
      working-directory: source
      run: |
        echo "SECRET_ANDROID_KEY=MANAGEMENT_APP_GOOGLE_SERVICE_ANDROID_SECRET_${{ env.SECRET_ENVIRONMENT }}" >> $GITHUB_ENV
        echo "SECRET_IOS_KEY=MANAGEMENT_APP_GOOGLE_SERVICE_IOS_SECRET_${{ env.SECRET_ENVIRONMENT }}" >> $GITHUB_ENV
        echo "SECRET_MACOS_KEY=MANAGEMENT_APP_GOOGLE_SERVICE_MACOS_SECRET_${{ env.SECRET_ENVIRONMENT }}" >> $GITHUB_ENV
        echo "SECRET_WEB_KEY=MANAGEMENT_APP_GOOGLE_SERVICE_WEB_SECRET_${{ env.SECRET_ENVIRONMENT }}" >> $GITHUB_ENV
        echo "SECRET_FIREBASE_OPTIONS_KEY=MANAGEMENT_APP_GOOGLE_SERVICE_FIREBASE_OPTIONS_SECRET_${{ env.SECRET_ENVIRONMENT }}" >> $GITHUB_ENV
        cd ../ManagementApp
        echo "${{ secrets[env.SECRET_ANDROID_KEY] }}" > ./android/app/google-services.json
        echo "${{ secrets[env.SECRET_IOS_KEY] }}" > ./ios/Runner/GoogleService-Info.plist
        echo "${{ secrets[env.SECRET_MACOS_KEY] }}" > ./macos/Runner/GoogleService-Info.plist
        echo "${{ secrets[env.SECRET_WEB_KEY] }}" > ./web/firebase-messaging-sw.js
        echo "${{ secrets[env.SECRET_FIREBASE_OPTIONS_KEY] }}" > ./lib/firebase_options.dart
        cat ${{ env.SECRET_FIREBASE_OPTIONS_KEY }}

    - name: Replace single file
      uses: richardrigutins/replace-in-files@v2
      with:
        files: './ManagementApp/server/server.sh'
        search-text: '{PORT}'
        replacement-text: '${{ env.PORT }}'

    - name: Replace single file
      uses: richardrigutins/replace-in-files@v2
      with:
        files: './ManagementApp/Dockerfile'
        search-text: '{env}'
        replacement-text: '${{github.event.inputs.env}}'

    - name: Login to Docker Container Registry
      uses: docker/login-action@v3
      with:
        registry: app.left-rightsrls.it
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Build && Push
      working-directory: source
      run: |
        cd ../ManagementApp
        docker buildx build -t app.left-rightsrls.it/mng_front_${{github.event.inputs.env}} --platform=linux/arm64 --no-cache --push .

    - name: Deploy to kubernetes
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f ./ManagementApp/kubernetes/${{github.event.inputs.env}}.yaml

    - name: Restart deployment
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout restart deployment/mng-front -n mng-${{github.event.inputs.env}}
