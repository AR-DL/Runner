name: BSHOP_BackEnd - Micros - K8s
on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Which env?
        options:
        - qa
        - prod
      build-api:
        type: boolean
        description: api-service

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    strategy:
      matrix:
        build-config:
        - build-api: 'api-service'
          if: ${{github.event.inputs.build-api == 'true' }}
          docker_repo_name: "bshop_api"
          deployment_name: "bshop-api"
          path: "../bshop_core/api_service"
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      if: ${{ matrix.build-config.if }}
      uses: actions/checkout@v3
      with:
        path: source
        submodules: recursive
        fetch-depth: 0

    - name: Set ENV variables qa
      if: ${{ matrix.build-config.if && (github.event.inputs.env == 'qa')}}
      run: |
        echo "BRANCH_NAME=qa" >> $GITHUB_ENV

    - name: Set ENV variables prod
      if: ${{ matrix.build-config.if && (github.event.inputs.env == 'prod')}}
      run: |
        echo "BRANCH_NAME=main" >> $GITHUB_ENV

    - name: Set up Maven Central Repository
      if: ${{ matrix.build-config.if }}
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Setup SSH
      if: ${{ matrix.build-config.if }}
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Cloning BSHOP Core and switching to ${{ env.BRANCH_NAME }}
      if: ${{ matrix.build-config.if }}
      working-directory: source
      run: |
        cd ..
        git clone git@github.com:AR-DL/bshop_core.git
        cd bshop_core
        git checkout ${{ env.BRANCH_NAME }}

    - name: Cloning BSHOP Extension and switching to ${{ env.BRANCH_NAME }}
      if: ${{ matrix.build-config.if }}
      working-directory: source
      run: |
        cd ..
        git clone git@github.com:AR-DL/bshop_extension.git
        cd bshop_extension
        git checkout ${{ env.BRANCH_NAME }}

    - name: Build core
      if: ${{ matrix.build-config.if }}
      working-directory: source
      run: |
        cd ../bshop_core
        mvn clean install

    - name: Package
      if: ${{ matrix.build-config.if }}
      working-directory: source
      run: |
        cd ${{ matrix.build-config.path }}
        mvn package

    - name: Login to Docker Container Registry
      if: ${{ matrix.build-config.if }}
      uses: docker/login-action@v3
      with:
        registry: app.left-rightsrls.it
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Set up QEMU
      if: ${{ matrix.build-config.if }}
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: ${{ matrix.build-config.if }}
      uses: docker/setup-buildx-action@v3

    - name: Docker Build && Push
      if: ${{ matrix.build-config.if }}
      working-directory: source
      run: |
        cd ${{ matrix.build-config.path }}
        docker buildx build -t app.left-rightsrls.it/${{ matrix.build-config.docker_repo_name }}_${{github.event.inputs.env}} --platform=linux/arm64 --no-cache --push .

    - name: Deploy to kubernetes
      if: ${{ matrix.build-config.if }}
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f ./source/${{ matrix.build-config.path }}/kubernetes/${{github.event.inputs.env}}.yaml

    - name: Restart deployment
      if: ${{ matrix.build-config.if }}
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout restart deployment/${{ matrix.build-config.deployment_name }} -n bshop-${{github.event.inputs.env}}
